// Generated by gencpp from file coalas_pkg/CollAvoidServiceResponse.msg
// DO NOT EDIT!


#ifndef COALAS_PKG_MESSAGE_COLLAVOIDSERVICERESPONSE_H
#define COALAS_PKG_MESSAGE_COLLAVOIDSERVICERESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace coalas_pkg
{
template <class ContainerAllocator>
struct CollAvoidServiceResponse_
{
  typedef CollAvoidServiceResponse_<ContainerAllocator> Type;

  CollAvoidServiceResponse_()
    : corrected_joy_speed(0)
    , corrected_joy_turn(0)  {
    }
  CollAvoidServiceResponse_(const ContainerAllocator& _alloc)
    : corrected_joy_speed(0)
    , corrected_joy_turn(0)  {
    }



   typedef uint8_t _corrected_joy_speed_type;
  _corrected_joy_speed_type corrected_joy_speed;

   typedef uint8_t _corrected_joy_turn_type;
  _corrected_joy_turn_type corrected_joy_turn;




  typedef boost::shared_ptr< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> const> ConstPtr;

}; // struct CollAvoidServiceResponse_

typedef ::coalas_pkg::CollAvoidServiceResponse_<std::allocator<void> > CollAvoidServiceResponse;

typedef boost::shared_ptr< ::coalas_pkg::CollAvoidServiceResponse > CollAvoidServiceResponsePtr;
typedef boost::shared_ptr< ::coalas_pkg::CollAvoidServiceResponse const> CollAvoidServiceResponseConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace coalas_pkg

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'coalas_pkg': ['/home/user/catkin_ws/src/coalas_pkg/msg'], 'sensor_msgs': ['/opt/ros/indigo/share/sensor_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "ba34392ef9fd10684273e2c6a84847c4";
  }

  static const char* value(const ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xba34392ef9fd1068ULL;
  static const uint64_t static_value2 = 0x4273e2c6a84847c4ULL;
};

template<class ContainerAllocator>
struct DataType< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "coalas_pkg/CollAvoidServiceResponse";
  }

  static const char* value(const ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint8 corrected_joy_speed\n\
uint8 corrected_joy_turn\n\
\n\
\n\
";
  }

  static const char* value(const ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.corrected_joy_speed);
      stream.next(m.corrected_joy_turn);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER;
  }; // struct CollAvoidServiceResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::coalas_pkg::CollAvoidServiceResponse_<ContainerAllocator>& v)
  {
    s << indent << "corrected_joy_speed: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.corrected_joy_speed);
    s << indent << "corrected_joy_turn: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.corrected_joy_turn);
  }
};

} // namespace message_operations
} // namespace ros

#endif // COALAS_PKG_MESSAGE_COLLAVOIDSERVICERESPONSE_H
